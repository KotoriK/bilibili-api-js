{"version":3,"file":"index.modern.js","sources":["../src/api.ts","../src/getSpaceAccInfo.ts","../src/live/getDanmuInfo.ts","../src/live/getRoomPlayInfo.ts","../src/live/getPlayUrl.ts"],"sourcesContent":["export interface APIRequest<T> {\n    url: string,\n    options: {\n        params?: { [k: string]: string },\n        method?: string,\n        headers?: Record<string, string | string[]>,\n    }\n}\nexport interface APIResponse<DataType> {\n    code: number,\n    message: string,\n    ttl: number,\n    data: DataType\n}\nexport type RequestExecuter = <T>(req: APIRequest<T>) => APIResponse<T>\nexport const USER_AGENT = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36\"\nexport const SEC = {\n    'sec-fetch-dest': 'empty',\n    'sec-fetch-mode': 'cors',\n    'sec-fetch-site': 'same-site',\n}","import { APIRequest, APIResponse, SEC, USER_AGENT } from \"./api\";\n\nexport function getSpaceAccInfo(mid: string | number): APIRequest<APIResponse<GetSpaceAccInfo_Data>> {\n    return {\n        url: 'https://api.bilibili.com/x/space/acc/info?mid=' + mid,\n        options: {\n            headers: {\n                ...SEC,\n                'user-agent': USER_AGENT\n            }\n        }\n    }\n}\nexport interface GetSpaceAccInfo_Data {\n    mid: number\n    name: string\n    sex: string\n    face: string\n    sign: string\n    rank: number\n    level: number\n    jointime: number\n    moral: number\n    silence: number\n    coins: number\n    \"fans_badge\": boolean\n    \"fans_medal\": FansMedal\n    official: Official\n    vip: Vip\n    pendant: Pendant\n    nameplate: Nameplate\n    \"user_honour_info\": UserHonourInfo\n    \"is_followed\": boolean\n    \"top_photo\": string\n    theme: Theme\n    \"sys_notice\": Theme\n    \"live_room\": LiveRoom\n    birthday: string\n    school: null\n    profession: Profession\n    tags: null\n    series: Series\n}\ninterface FansMedal {\n    show: boolean\n    wear: boolean\n    medal: null\n}\ninterface Official {\n    role: number\n    title: string\n    desc: string\n    type: number\n}\ninterface Label {\n    path: string\n    text: string\n    \"label_theme\": string\n    \"text_color\": string\n    \"bg_style\": number\n    \"bg_color\": string\n    \"border_color\": string\n}\ninterface Vip {\n    type: number\n    status: number\n    \"due_date\": number\n    \"vip_pay_type\": number\n    \"theme_type\": number\n    label: Label\n    \"avatar_subscript\": number\n    \"nickname_color\": string\n    role: number\n    \"avatar_subscript_url\": string\n}\ninterface Pendant {\n    pid: number\n    name: string\n    image: string\n    expire: number\n    \"image_enhance\": string\n    \"image_enhance_frame\": string\n}\ninterface Nameplate {\n    nid: number\n    name: string\n    image: string\n    \"image_small\": string\n    level: string\n    condition: string\n}\ninterface UserHonourInfo {\n    mid: number\n    colour: null\n    tags: Array<undefined>\n}\ninterface Theme {\n\n}\ninterface LiveRoom {\n    roomStatus: number\n    liveStatus: number\n    url: string\n    title: string\n    cover: string\n    online: number\n    roomid: number\n    roundStatus: number\n    \"broadcast_type\": number\n}\ninterface Profession {\n    name: string\n}\ninterface Series {\n    \"user_upgrade_status\": number\n    \"show_upgrade_window\": boolean\n}","import { APIRequest, APIResponse, SEC, USER_AGENT } from \"../api\";\n\n/**\n * 获取弹幕服务器\n *\n * @author KotoriK\n * @export\n * @param id\n * @param [type='0'] 0是直播，1是视频\n * @returns\n */\nexport function getDanmuInfo(id: number | string, type: number | string = '0'): APIRequest<APIResponse<GetDanmuInfo_Data>> {\n    return {\n        url: `http://api.live.bilibili.com/xlive/web-room/v1/index/getDanmuInfo?id=${id}&type=${type}`,\n        options: {\n            headers: {\n                origin: 'https://live.bilibili.com',\n                referer: 'https://live.bilibili.com/',\n                ...SEC,\n                'user-agent': USER_AGENT\n            }\n        }\n    }\n}\nexport interface GetDanmuInfo_Data {\n    business_id: number\n    group: string\n    host_list: Array<DanmakuHost>\n    max_delay: number\n    refresh_rate: number\n    refresh_row_factor: number\n    token: string\n}\nexport interface DanmakuHost {\n    host: string\n    port: number\n    ws_port: number\n    wss_port: number\n}","import { APIRequest, APIResponse, SEC, USER_AGENT } from \"../api\";\n\nexport function getRoomPlayInfo(room_id: number | string): APIRequest<APIResponse<GetRoomPlayInfo_Data>> {\n    return {\n        url: `http://api.live.bilibili.com/xlive/web-room/v1/index/getRoomPlayInfo?room_id=${room_id}`,\n        options: {\n            headers: {\n                ...SEC,\n                'user-agent': USER_AGENT\n            }\n        }\n    }\n}\nexport interface GetRoomPlayInfo_Data {\n    room_id: number,\n    \"short_id\": number,//display_id\n    \"uid\": number,\n    \"need_p2p\": number,\n    \"is_hidden\": boolean,\n    \"is_locked\": boolean,\n    \"is_portrait\": boolean,\n    \"live_status\": number,\n    \"hidden_till\": number,\n    \"lock_till\": number,\n    \"encrypted\": boolean,\n    \"pwd_verified\": boolean,\n    \"live_time\": number,\n    \"room_shield\": number,\n    \"is_sp\": number,\n    \"special_type\": number,\n    \"play_url\": string,\n    \"all_special_types\": Array<any>\n}","import { APIRequest, APIResponse, SEC, USER_AGENT } from \"../api\";\n\n\nexport interface QualityDescription {\n    qn: number\n    desc: string\n}\nexport interface Durl {\n    url: string\n    length: number\n    order: number\n    stream_type: number\n    p2p_type: number\n}\nexport interface GetPlayUrl_Data {\n    current_quality: number\n    accept_quality: Array<string>\n    current_qn: number\n    quality_description: Array<QualityDescription>\n    durl: Array<Durl>\n}\nexport interface GetPlayUrl_Option {\n    cid: number\n    platform?: 'h5' | 'web'\n    qn?: number\n}\nexport function getPlayUrl(opt: GetPlayUrl_Option): APIRequest<APIResponse<GetPlayUrl_Data>> {\n    const param = Object.entries(opt).map(([key, value]) => `${key}=${value}`).join('&')\n    return {\n        url: `https://api.live.bilibili.com/room/v1/Room/playUrl?${param}`,\n        options: {\n            headers: {\n                ...SEC,\n                'user-agent': USER_AGENT\n            }\n        }\n    }\n}"],"names":["USER_AGENT","SEC","getSpaceAccInfo","mid","url","options","headers","getDanmuInfo","id","type","origin","referer","getRoomPlayInfo","room_id","getPlayUrl","opt","Object","entries","map","key","value","join"],"mappings":"sNAeaA,EAAa,sHACbC,EAAM,CACf,iBAAkB,QAClB,iBAAkB,OAClB,iBAAkB,sBCjBNC,EAAgBC,GAC5B,MAAO,CACHC,IAAK,iDAAmDD,EACxDE,QAAS,CACLC,aACOL,GACH,aAAcD,eCGdO,EAAaC,EAAqBC,EAAwB,KACtE,MAAO,CACHL,4EAA6EI,UAAWC,IACxFJ,QAAS,CACLC,WACII,OAAQ,4BACRC,QAAS,8BACNV,GACH,aAAcD,eCjBdY,EAAgBC,GAC5B,MAAO,CACHT,oFAAqFS,IACrFR,QAAS,CACLC,aACOL,GACH,aAAcD,eCkBdc,EAAWC,GAEvB,MAAO,CACHX,0DAFUY,OAAOC,QAAQF,GAAKG,IAAI,EAAEC,EAAKC,QAAcD,KAAOC,KAASC,KAAK,OAG5EhB,QAAS,CACLC,aACOL,GACH,aAAcD"}